# SSH Authentication Methods

This section explains two ways of authenticating with your Raspberry Pi via SSH:
1. **Password Authentication** (default, using your Pi user password).  
2. **Public Key Authentication** (recommended, more secure and useful for scripts like shutdown automation).  

---

## 1. Password Authentication

This is the simplest method, used immediately after initial setup.

### Steps:
1. Open a terminal on your PC.
2. Connect to your Pi using its IP address:

   ```bash
   ssh pi@<your Pi IP>
Enter the password you configured during Raspberry Pi Imager flashing.

Once authenticated, you will see:

bash
Copy code
pi@raspberrypi:~ $
Pros:
Easy to set up (no extra configuration required).

Cons:
Less secure than keys.

Must type the password every time.

2. Public Key Authentication
This method eliminates the need for a password and allows secure, automated connections.

Generate SSH Key Pair on Your PC:
Run on your local machine (not on the Pi):

bash
Copy code
ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
Press Enter to accept the default file location (~/.ssh/id_rsa).

Optionally, set a passphrase for extra security.

Copy Public Key to Raspberry Pi:
Run:

bash
Copy code
ssh-copy-id pi@<your Pi IP>
Enter your Piâ€™s password one last time.

Your public key (~/.ssh/id_rsa.pub) will be added to ~/.ssh/authorized_keys on the Pi.

Test Key-Based Login:
Now connect again:

bash
Copy code
ssh pi@<your Pi IP>
You should log in without entering a password.


bash
Copy code
sudo systemctl restart ssh
Now, only key-based authentication will work.
